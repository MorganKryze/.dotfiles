#!/bin/zsh

# open a VS Code window in the .dotfiles project
function config() {
	cd ~/.dotfiles
	opn
}

# open a VS Code window in the project directory
function projects() {
	cd ~/Documents/FILES/DEV/GIT/GIT-PROJECT
}

# Start an HTTP server from a directory, optionally specifying the port
function server() {
	local port="${1:-8000}"
	#sleep 1 && open "http://localhost:${port}/" &
	# Set the default Content-Type to `text/plain` instead of `application/octet-stream`
	# And serve everything as UTF-8 (although not technically correct, this doesnâ€™t break anything for binary files)
	#python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port";
}

function dataurl() {
	local mimeType=$(file -b --mime-type "$1")
	if [[ $mimeType == text/* ]]; then
		mimeType="${mimeType};charset=utf-8"
	fi
	echo "data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')"
}

function processes-using-disk() {
	local disk_name="$1"
	sudo lsof /Volumes/$disk_name
}

function kill-processes-using-disk() {
	local disk_name="$1"
	sudo lsof /Volumes/$disk_name | awk 'NR > 1 {print $2}' | sudo xargs kill
}

function disable-spotlight-indexing-for-disk() {
	local disk_name="$1"
	sudo mdutil -d "/Volumes/$disk_name"
	sudo mdutil -X "/Volumes/$disk_name"
}

function setup-rpi-lodestone() {
	if [ -z "$1" ] || [ -z "$2" ]; then
		echo "Usage: setup-rpi-lodestone <username> <machine_name>"
		return 1
	fi

	# --------------------------- LEGACY METHOD ---------------------------
	# echo "Downloading Lodestone CLI\n"
	# curl -L https://github.com/Lodestone-Team/lodestone_cli/releases/download/v1.0.6/lodestone_cli_linux_aarch64 > lodestone_cli_linux_aarch64

	# echo "\nMaking Lodestone CLI executable\n"
	# chmod +x lodestone_cli_linux_aarch64 

	# echo "\nFirst run of Lodestone CLI\n"
	# sudo /home/admin/lodestone_cli_linux_aarch64 --run-core
	# --------------------------- LEGACY METHOD ---------------------------

	echo "Chechking if docker is installed\n"

	if ! ssh $2 "command -v docker >/dev/null 2>&1"; then
		echo "Docker is not installed on $2, please run setup-rpi-docker $1 $2 first."
		return 1
	else
		echo "\nDocker is installed on $2\n"
	fi
	

	echo "\nCreating the initial volume\n"
	ssh $2 "docker volume create lodestone"

	echo "\nStarting Lodestone Core\n"
	ssh $2 "docker run -d \
    --name lodestone \
    --restart unless-stopped \
    -p 16662:16662 \
    -v lodestone:/home/user/.lodestone \
    ghcr.io/lodestone-team/lodestone_core"

	echo "\n$2 running at ip $(ssh $2 "hostname -I")\n"
}

function upload-world-archive() {
    if [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ] || [ -z "$4" ] || [ -z "$5" ]; then
        echo "\nUsage: upload-world-archive <world_archive_location> <world_name> <username> <hostname> <instance_name>"
		echo "\nExample: upload-world-archive /path/to/world/archive world_folder_name pi raspberrypi.local Creative_Server-ea5837b5\n"
        return 1
    fi

	echo "Uploading $2 to $4\n"
    scp -r "$1/$2" "$3@$4:/home/$3/"
	sleep 2

	echo "\nRemoving old world folder\n"
    ssh $4 "sudo rm -rf /var/lib/docker/volumes/lodestone/_data/instances/$5/world"
	sleep 2

	echo "\nMoving $2 to Lodestone\n"
    ssh $4 "sudo mv /home/$3/$2 /var/lib/docker/volumes/lodestone/_data/instances/$5/world"
	sleep 1

	echo "\nUploading $2 to $4 complete, consider restarting the server.\n"
}